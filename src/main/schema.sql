CREATE TABLE IF NOT EXISTS USER (
    USER_ID     INT PRIMARY KEY
);

CREATE TABLE IF NOT EXISTS ROOM (
    ROOM_ID     VARCHAR(64) PRIMARY KEY
);

CREATE TABLE IF NOT EXISTS USERS_IN_ROOM (
    USER_ID     VARCHAR(64) NOT NULL ,
    ROOM_ID     VARCHAR(64) NOT NULL
);

ALTER TABLE USERS_IN_ROOM
ADD FOREIGN KEY (USER_ID) REFERENCES USER(USER_ID);

ALTER TABLE USERS_IN_ROOM
ADD FOREIGN KEY (ROOM_ID) REFERENCES ROOM(ROOM_ID);

CREATE TABLE IF NOT EXISTS MONEY_EVENT (
    TOKEN           CHAR(3) PRIMARY KEY ,
    CREATE_USER_ID  VARCHAR(64) ,
    ROOM_ID         VARCHAR(64) ,
    MONEY           INT UNSIGNED NOT NULL ,
    ALL_RECV_YN     CHAR(1) DEFAULT 'N' NOT NULL ,
    CREATED_DATE    TIMESTAMP DEFAULT NOW() NOT NULL ,
    RECV_EXP_DATE   TIMESTAMP NOT NULL ,
    VIEW_EXP_DATE   TIMESTAMP NOT NULL
);

ALTER TABLE MONEY_EVENT
    ADD FOREIGN KEY (CREATE_USER_ID) REFERENCES USER(USER_ID);

ALTER TABLE MONEY_EVENT
    ADD FOREIGN KEY (ROOM_ID) REFERENCES ROOM(ROOM_ID);

CREATE TABLE IF NOT EXISTS SUB_MONEY_EVENT (
    ID                  BIGINT AUTO_INCREMENT PRIMARY KEY ,
    TOKEN               VARCHAR(64) ,
    MONEY               INT UNSIGNED NOT NULL ,
    ASSIGNED_YN         CHAR(1) DEFAULT 'N' NOT NULL ,
    ASSIGNED_USER_ID    VARCHAR(64)
);

ALTER TABLE SUB_MONEY_EVENT
    ADD FOREIGN KEY (TOKEN) REFERENCES MONEY_EVENT(TOKEN);

ALTER TABLE SUB_MONEY_EVENT
    ADD FOREIGN KEY (ASSIGNED_USER_ID) REFERENCES USER(USER_ID);
